/*
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal.InternalDialogFlowParser;
import dk.sdu.mmmi.mdsd.services.DialogFlowGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DialogFlowParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DialogFlowGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DialogFlowGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getDeclarationAccess().getAlternatives(), "rule__Declaration__Alternatives");
			builder.put(grammarAccess.getDialogFlowSystemAccess().getGroup(), "rule__DialogFlowSystem__Group__0");
			builder.put(grammarAccess.getIntentAccess().getGroup(), "rule__Intent__Group__0");
			builder.put(grammarAccess.getPhrasesAccess().getGroup(), "rule__Phrases__Group__0");
			builder.put(grammarAccess.getPhraseValueAccess().getGroup(), "rule__PhraseValue__Group__0");
			builder.put(grammarAccess.getResponsesAccess().getGroup(), "rule__Responses__Group__0");
			builder.put(grammarAccess.getResponsesAccess().getGroup_3(), "rule__Responses__Group_3__0");
			builder.put(grammarAccess.getActionsAccess().getGroup(), "rule__Actions__Group__0");
			builder.put(grammarAccess.getActionValueAccess().getGroup(), "rule__ActionValue__Group__0");
			builder.put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
			builder.put(grammarAccess.getEntityValueAccess().getGroup(), "rule__EntityValue__Group__0");
			builder.put(grammarAccess.getEntityValueAccess().getGroup_4(), "rule__EntityValue__Group_4__0");
			builder.put(grammarAccess.getDialogFlowSystemAccess().getNameAssignment_1(), "rule__DialogFlowSystem__NameAssignment_1");
			builder.put(grammarAccess.getDialogFlowSystemAccess().getDeclarationsAssignment_2(), "rule__DialogFlowSystem__DeclarationsAssignment_2");
			builder.put(grammarAccess.getIntentAccess().getNameAssignment_1(), "rule__Intent__NameAssignment_1");
			builder.put(grammarAccess.getIntentAccess().getPhraseAssignment_2(), "rule__Intent__PhraseAssignment_2");
			builder.put(grammarAccess.getIntentAccess().getResponseAssignment_3(), "rule__Intent__ResponseAssignment_3");
			builder.put(grammarAccess.getIntentAccess().getActionAssignment_4(), "rule__Intent__ActionAssignment_4");
			builder.put(grammarAccess.getPhrasesAccess().getPhrasesAssignment_2(), "rule__Phrases__PhrasesAssignment_2");
			builder.put(grammarAccess.getPhraseValueAccess().getValueAssignment_2(), "rule__PhraseValue__ValueAssignment_2");
			builder.put(grammarAccess.getResponsesAccess().getResponsesAssignment_1(), "rule__Responses__ResponsesAssignment_1");
			builder.put(grammarAccess.getResponsesAccess().getResponsesAssignment_3_1(), "rule__Responses__ResponsesAssignment_3_1");
			builder.put(grammarAccess.getActionsAccess().getActionsAssignment_2(), "rule__Actions__ActionsAssignment_2");
			builder.put(grammarAccess.getActionValueAccess().getNameAssignment_1(), "rule__ActionValue__NameAssignment_1");
			builder.put(grammarAccess.getActionValueAccess().getTypeAssignment_2(), "rule__ActionValue__TypeAssignment_2");
			builder.put(grammarAccess.getActionValueAccess().getListAssignment_3(), "rule__ActionValue__ListAssignment_3");
			builder.put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
			builder.put(grammarAccess.getEntityAccess().getEntitiesAssignment_2(), "rule__Entity__EntitiesAssignment_2");
			builder.put(grammarAccess.getEntityValueAccess().getValuesAssignment_2(), "rule__EntityValue__ValuesAssignment_2");
			builder.put(grammarAccess.getEntityValueAccess().getValuesAssignment_4_1(), "rule__EntityValue__ValuesAssignment_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DialogFlowGrammarAccess grammarAccess;

	@Override
	protected InternalDialogFlowParser createParser() {
		InternalDialogFlowParser result = new InternalDialogFlowParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DialogFlowGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DialogFlowGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
