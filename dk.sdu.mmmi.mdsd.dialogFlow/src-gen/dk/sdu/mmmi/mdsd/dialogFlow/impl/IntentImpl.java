/**
 * generated by Xtext 2.24.0
 */
package dk.sdu.mmmi.mdsd.dialogFlow.impl;

import dk.sdu.mmmi.mdsd.dialogFlow.Actions;
import dk.sdu.mmmi.mdsd.dialogFlow.DialogFlowPackage;
import dk.sdu.mmmi.mdsd.dialogFlow.Intent;
import dk.sdu.mmmi.mdsd.dialogFlow.Phrases;
import dk.sdu.mmmi.mdsd.dialogFlow.Responses;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Intent</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.mmmi.mdsd.dialogFlow.impl.IntentImpl#getPhrase <em>Phrase</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.dialogFlow.impl.IntentImpl#getResponse <em>Response</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.dialogFlow.impl.IntentImpl#getAction <em>Action</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IntentImpl extends DeclarationImpl implements Intent
{
  /**
   * The cached value of the '{@link #getPhrase() <em>Phrase</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhrase()
   * @generated
   * @ordered
   */
  protected Phrases phrase;

  /**
   * The cached value of the '{@link #getResponse() <em>Response</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResponse()
   * @generated
   * @ordered
   */
  protected Responses response;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected Actions action;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IntentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DialogFlowPackage.Literals.INTENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Phrases getPhrase()
  {
    return phrase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPhrase(Phrases newPhrase, NotificationChain msgs)
  {
    Phrases oldPhrase = phrase;
    phrase = newPhrase;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DialogFlowPackage.INTENT__PHRASE, oldPhrase, newPhrase);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPhrase(Phrases newPhrase)
  {
    if (newPhrase != phrase)
    {
      NotificationChain msgs = null;
      if (phrase != null)
        msgs = ((InternalEObject)phrase).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DialogFlowPackage.INTENT__PHRASE, null, msgs);
      if (newPhrase != null)
        msgs = ((InternalEObject)newPhrase).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DialogFlowPackage.INTENT__PHRASE, null, msgs);
      msgs = basicSetPhrase(newPhrase, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DialogFlowPackage.INTENT__PHRASE, newPhrase, newPhrase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Responses getResponse()
  {
    return response;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetResponse(Responses newResponse, NotificationChain msgs)
  {
    Responses oldResponse = response;
    response = newResponse;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DialogFlowPackage.INTENT__RESPONSE, oldResponse, newResponse);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResponse(Responses newResponse)
  {
    if (newResponse != response)
    {
      NotificationChain msgs = null;
      if (response != null)
        msgs = ((InternalEObject)response).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DialogFlowPackage.INTENT__RESPONSE, null, msgs);
      if (newResponse != null)
        msgs = ((InternalEObject)newResponse).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DialogFlowPackage.INTENT__RESPONSE, null, msgs);
      msgs = basicSetResponse(newResponse, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DialogFlowPackage.INTENT__RESPONSE, newResponse, newResponse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Actions getAction()
  {
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAction(Actions newAction, NotificationChain msgs)
  {
    Actions oldAction = action;
    action = newAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DialogFlowPackage.INTENT__ACTION, oldAction, newAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAction(Actions newAction)
  {
    if (newAction != action)
    {
      NotificationChain msgs = null;
      if (action != null)
        msgs = ((InternalEObject)action).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DialogFlowPackage.INTENT__ACTION, null, msgs);
      if (newAction != null)
        msgs = ((InternalEObject)newAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DialogFlowPackage.INTENT__ACTION, null, msgs);
      msgs = basicSetAction(newAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DialogFlowPackage.INTENT__ACTION, newAction, newAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DialogFlowPackage.INTENT__PHRASE:
        return basicSetPhrase(null, msgs);
      case DialogFlowPackage.INTENT__RESPONSE:
        return basicSetResponse(null, msgs);
      case DialogFlowPackage.INTENT__ACTION:
        return basicSetAction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DialogFlowPackage.INTENT__PHRASE:
        return getPhrase();
      case DialogFlowPackage.INTENT__RESPONSE:
        return getResponse();
      case DialogFlowPackage.INTENT__ACTION:
        return getAction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DialogFlowPackage.INTENT__PHRASE:
        setPhrase((Phrases)newValue);
        return;
      case DialogFlowPackage.INTENT__RESPONSE:
        setResponse((Responses)newValue);
        return;
      case DialogFlowPackage.INTENT__ACTION:
        setAction((Actions)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DialogFlowPackage.INTENT__PHRASE:
        setPhrase((Phrases)null);
        return;
      case DialogFlowPackage.INTENT__RESPONSE:
        setResponse((Responses)null);
        return;
      case DialogFlowPackage.INTENT__ACTION:
        setAction((Actions)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DialogFlowPackage.INTENT__PHRASE:
        return phrase != null;
      case DialogFlowPackage.INTENT__RESPONSE:
        return response != null;
      case DialogFlowPackage.INTENT__ACTION:
        return action != null;
    }
    return super.eIsSet(featureID);
  }

} //IntentImpl
